#pragma once

/**@file HosekSkyDome.h
@brief Plik zawiera deklaracjê klasy HosekSkyDome, do wyœwietlania nieba
u¿ywaj¹c modelu Hodeka i Wilkiego.*/

#include "..\SkyDome.h"
#include "HosekSkyModel.h"
#include <DirectXMath.h>


/**@brief Struktura wierzcho³ka u¿ywana przez klasê HosekSkyDome.

Kolor wierzcho³ka jest ustalany jest przypisaywany na sta³e do wierzcho³ków
i mo¿e byæ zmieniony po wywo³aniu funkcji update_sky_dome. Kopu³a nieba
nie jest w ¿aden sposób oœwietlona wiêc nie przechowujemy normalnych.
Nie u¿ywamy te¿ tekstur, wiêc nie potrzeba ¿adnych UVsów.*/
struct SkyDomeVertex
{
	DirectX::XMFLOAT3 position;		///<Pozycja wierzcho³ka
	DirectX::XMFLOAT3 color;		///<Kolor wierzcho³ka
};

/**@brief Klasa s³u¿y do wyœwietlania kopu³y nieba.

Wierzcho³ki i indeksy s¹ zapisywane do buforów tylnych. Nastêpnie po zakoñczeniu generowania
s¹ przepisywane w jednym momencie do buforów DirectXowych. Dzieki temu mo¿emy generowaæ nowy uk³ad nieba
w innym w¹tku, a potem w jednym momencie go przepisaæ.
Generowanie nieba jest zasadniczo procesem d³ugim i nie mo¿na go wykonywac w czasie rzeczywistym.*/
class HosekSkyDome : public SkyDome
{
private:
	VERT_INDEX* back_ind_buffer;		///<Tylny bufor indeksów. 
	SkyDomeVertex* back_vert_buffer;	///<Tylny bufor wierzcho³ków.
	unsigned int vert_count;			///<Liczba wierzcho³ków w buforze wierzcho³ków

	HosekSkylightModel skylight_model;	///<Obiekt, który bêdzie podawa³ informacje o kolorach

	BufferObject*		constantBuffer;

	void generate_sphere(int vertical, int horizontal, float radius );
public:
	HosekSkyDome( ModelsManager* man);
	~HosekSkyDome();

	void init_sky_dome( DirectX::XMVECTOR sun_direction,
						const double turbidity,
						const double* albedo,
						int vertical,
						int horizontal,
						float radius,
						float sky_intensity = 1.0f,
						float sun_intensity = 1.0f );
	void update_sky_dome( DirectX::XMVECTOR sun_direction,
						  const double turbidity,
						  const double* albedo,
						  float sky_intensity = 1.0f,
						  float sun_intensity = 1.0f );
	void update_buffers( ) override;
};

